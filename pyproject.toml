[tool.poetry]
name = "tgbot-template-with-clean-architecture"
version = "0.2.0"
description = "simple template for tg bot via aiogram 3 and clean architecture"
authors = ["NekitPnt <panatikin@gmail.com>", "BerhtAdal <albertmezhakov@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
loguru = "0.7.3"
certifi = "^2025.4.26"
ujson = "5.10.0"
msgpack = "^1.0.7"
aiogram = "^3.4"
sqlalchemy = "^2.0"
asyncpg = "^0.30.0"
alembic = "^1.16.1"
redis = "^6.2.0"
apscheduler = "^3.10"
fastapi = "^0.115.12"
pydantic = "^2.11.5"
pydantic-settings = "^2.9.1"
greenlet = "^3.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
testcontainers = "^4.10.0"
pytest-asyncio = "^1.0.0"
aiosqlite = "^0.21.0"

[tool.poetry.group.lint.dependencies]
mypy = "*"
ruff = "*"
black = "^22"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120

[tool.mypy]
plugins = ["pydantic.mypy"]
warn_redundant_casts = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
ignore_missing_imports = true
show_error_codes = true
scripts_are_modules = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.ruff]
# https://beta.ruff.rs/docs/rules/
select = [
    "E",
    "F",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    "ASYNC",
    "S",
    "B",
    "C4",
    "DTZ",
    "T10",
    "ISC",
    "ICN",
    "PIE",
    "T20",
    "PT",
    "Q",
    "RET",
    "SLF",
    "SIM",
    "ERA",
    "PLE",
    "TRY",
]
unfixable = [
    "ERA", # do not autoremove commented out code
]
ignore = ["TRY003"]
line-length = 120
