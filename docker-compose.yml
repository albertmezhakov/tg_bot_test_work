volumes:
  pg_project:

services:
  pg_db:
    image: postgres:latest
    restart: always
    container_name: tg_bot_template_postgres
    hostname: ${POSTGRES_HOST}
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_project:/var/lib/postgresql/tg_bot_template
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 1s
      timeout: 1s
      retries: 10
  redis_fsm:
    image: redis:latest
    hostname: ${FSM_REDIS_HOST:-localhost}
    command: redis-server --requirepass "${FSM_REDIS_PASS:-}"
    env_file:
      - .env
    ports:
      - "6379:6379"
  tg_bot:
    container_name: tg_bot_template
    build: .
    command: sh -c "python -m alembic upgrade head && python src/main_bot.py"
    env_file:
      - .env
    restart: always
    depends_on:
      pg_db:
        condition: service_healthy
      redis_fsm:
        condition: service_started
  fast_api:
    container_name: tg_bot_template_api
    build: .
    env_file:
      - .env
    command: sh -c "python -m alembic upgrade head && python -m uvicorn src.main_api:app --host 0.0.0.0 --port 8000"
    restart: always
    depends_on:
      pg_db:
        condition: service_healthy
      redis_fsm:
        condition: service_started
    ports:
      - "8000:8000"